• What happens when you initialize a repository? Why do you need to do it?

Metadata get created in order to handle versioning


• How is the staging area different from the working directory and the repository? What value do you think it offers?

It holds the files you wish to include in your next commit.
It allows to keep track of those files and add them one by one without having to select all the files at once (that can be painful for massive commits)

• How can you use the staging area to make sure you have one commit per logical change?

By adding only files that belong to that logical change


• What are some situations when branches would be helpful in keeping your history organized? How would branches help?

They would help keeping different versions separated, and then allowing to merge them later when stable

• How do the diagrams help you visualize the branch structure?

By displaying when branches have been branched

• What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The two branches become one, with all the changes in both


• What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Pros: faster when you’re 100% sure it’s a basic and trackable change
Cons: it can mess things up 